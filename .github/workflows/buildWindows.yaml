name: CI
 
on: 
    #push
    workflow_dispatch  # Manuell Ã¼ber GitHub UI starten
    
jobs:
  build_and_test:
    name: "Build and test"
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Ninja (windows)
      run: choco install ninja
      if: matrix.os == 'windows-latest'
 
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.3'
        
    - uses: ilammy/msvc-dev-cmd@v1
    - uses: actions/checkout@v3
    
    - name: Build
      run: cmake -S . -B build -G "Ninja Multi-Config" && cmake --build build --config Release
      
    - name: Deploy Qt (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd build/Release
        windeployqt.exe appballHunt.exe --qmldir ${{ github.workspace }} --compiler-runtime --release
        
    - name: Test if executable works
      if: matrix.os == 'windows-latest'
      run: |
        cd build/Release
        echo "=== Running appballHunt.exe ==="
        ./appballHunt.exe || echo "App exited with code $LASTEXITCODE"

    - name: Verify logfile output
      if: matrix.os == 'windows-latest'
      run: |
        cd build/Release
        echo "=== Checking startupLog.txt ==="
        if exist startupLog.txt (
          echo "startupLog.txt found"
          findstr "run qt eventLoop" startupLog.txt >nul
          if %errorlevel%==0 (
            echo "Log contains 'run qt eventLoop'"
          ) else (
            echo "Log file found but message missing"
            type startupLog.txt
            exit /b 1
          )
        ) else (
          echo "startupLog.txt not found!"
          dir
          exit /b 1
        )
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qt-app-${{ matrix.os }}
        path: build/Release/  # Nur das Release-Verzeichnis hochladen